DYNAMIC TABLES
Static table: the table whose content can't be modified by the user

Dynamic: the table whose content can't be modified by the user

Pagination: has multiple pages

Advance Xpath:
Get to the nearest approachable element.
//tagname[@attribute='value']/following-sibling::tagname[indexIfNeeded]or[Attribute]
example://input[@id='favourite-book']/following-sibling::input[1]


//tagname[@attribute='value']/preceding-sibling::tagname[IndexIfNeeded] index will be reverse
example:
//input[@id='least-favorite']/preceding-sibling::input[1]

//tagname[@attribute='value']/child::input[IndexIfNeeded]
example: //div[@id='familyTree']/child::input[1]


Tables divided into several pages, the navigation bar is called PAGINATION

Calendars:
are also known as date-pickers



How to handle Calendars:
1. click on the calendar
2. locate the month and get the text
3. if the desired text is not visible --> we will keep clicking on next and keep updating text
4. as soon as we found our desired month --> grab all cells from the table
5. Loop through the cells
6. once the cell value is matched with our condition --> click on the matched date

Advanced Xpath
is based on parent and child, sibling relationships

identifying elements by following sibling
//tagname[@attribute = 'attribute value']/following-sibling::tagname

//input[@id = 'calFromDate']/following-sibling::img

identifying elements by preceding sibling
//tagname[@attribute = 'attribute value']/preceding-sibling::tagname

//span[text() = '& Orders']/preceding-sibling::span

identifying element parents
//tagname[@attribute = 'attribute value']/parent::parentTagname

//span[text() = '& Orders']/parent::a